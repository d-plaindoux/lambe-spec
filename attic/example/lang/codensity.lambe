data Codensity (f:* -> *) a = forall r. (a -> f r) -> f r

// Laws?

impl forall (f:* -> *). Functor (Codensity f) {
    def map c = k -> c.value (k @> self)
}

impl forall (f:* -> *). Applicative (Codensity f) {
    -- TODO
}

impl forall (f:* -> *). Monade (Codensity f) {
    -- TODO
}
