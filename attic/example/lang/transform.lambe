trait Data {
    --{
     Pure data approach
    }

    data (~>) (f:* -> *) (g:* -> *)
         (transform: forall a. f a -> g a)

    -- Implementation

    sig option_of_try : Try ~> Option
    def option_of_try = (~>) {
        transform t =
            when t
            is Failure -> None
            is Success -> Some t.value
    }

    --{
     Example:
     ```
     option_of_try transform (Success 1)
     ```
    }
}

trait Trait {
    --{
     Trait approach
    }

    trait (~>) (f:* -> *) (g:* -> *) {
        sig transform: forall a. self -> g a for f a
    }

    -- Implementation

    impl Try ~> Option {
        def transform =
            when self
            is Failure -> None
            is Success -> Some self.value
    }

    sig main : forall a. Try a -> Option a
    def main =
        let impl Try ~> Option
        in { _ transform }


    --{
     Example:
     ```
     let impl Try ~> Option in
        Success 1 transform
     ```

     a `Try ~> Option` implementation should be in the context
    }
}