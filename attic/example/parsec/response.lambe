use lang.bool

data Rejected s (source: s) (consumed: bool)
data Accepted a s (value: a) (source: s) (consumed: bool)
type Response a s = Rejected s | Accepted a s

impl forall a s. Response a s {
    sig fold : forall b. self -> (Rejected s -> b) -> (Accepted a s -> b) -> b

    def fold r a =
        when self
        is Rejected -> r self
        is Accepted -> a self
}

