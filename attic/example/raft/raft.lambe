-- ================================================================

data Identifier (name : string)

data Term (value : Int)

impl Term {
    sig term : self -> Term for int
    def term = Term self

    sig next : self -> self
    def next = Term (self.value + 1)
}

-- ================================================================

data Index (value : Int)

impl Index {
    sig index : self -> Term for int
    def index = Term self

    sig (+) : self -> Int -> self
    def (+) i = Term (self.value + i)

    sig (<) : self -> self -> Bool
    def (<) i = self.value < i.value

    sig (-) : self -> Int -> self
    def (-) i = Term (self.value + (-i))
}

-- ================================================================

data Context   (numberOfNodes : int) (activeNodes : List NodeIdentifier) (extendedTime : bool)
data Leader    (context: Context)
data Elector   (context: Context)
data Follower  (context: Context) (leader: Identifier)
data Candidate (context: Context) (followers: List Identifier)

type Kind = Leader | Elector | Follower | Candidate

-- ================================================================

data VoteRequested (candidate : Identifier) (term: Term) (lastLog : Index * Term)
data VoteAccepted  (follower  : Identifier) (term: Term)




